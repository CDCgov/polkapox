/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CREATE_SAMPLESHEET {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SUMMARIZE_QC {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: FASTP {
        ext.args = '--detect_adapter_for_pe -q 20 -c --length_required 50 -5 -3'
        ext.args2 = '-q 20 --length_required 50 -5 -3'
    }
    
    withName: IVAR_CONSENSUS_BWA {
        ext.aligner = 'bwa'
        ext.args = '-Q 0'
        ext.args2 = '-q 20 -t 0.67 -m 20 -n N'
    }

    withName: IVAR_CONSENSUS_POLISH {
        publishDir = [
            path: { "${params.outdir}/final_assembly" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-Q 0'
        ext.args2 = '-q 20 -t 0.67 -m 20 -n N'
    }

    withName: IVAR_VARIANTS {
        publishDir = [
            path: { "${params.outdir}/ivar" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.caller = 'ivar'
        ext.args = '-aa -A -d 600000 -B -Q 0'
        ext.args2 = '-q 20'
    }

    withName: VARIANT_CONVERT {
        publishDir = [
            path: { "${params.outdir}/ivar" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.caller = 'ivar'
    }

    withName: SUMMARIZE_TSV {
        publishDir = [
            path: { "${params.outdir}/variant_summaries" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: AGGREGATE_TSVS {
        publishDir = [
            path: { "${params.outdir}/variant_summaries" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: GRAPH_RECON {
        publishDir = [
            path: { "${params.outdir}/graph_recon" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BWA_MEM_DENOVO {
        publishDir = [
            path: { "${params.outdir}/graph_recon_mapping" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMTOOLS_FLAGSTAT_DENOVO {
        publishDir = [
            path: { "${params.outdir}/graph_recon_mapping" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

     withName: UNICYCLER {
        publishDir = [
            path: { "${params.outdir}/unicycler" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

     withName: BANDAGE {
        publishDir = [
            path: { "${params.outdir}/bandage" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PUBLISH_CONTIGS {
        publishDir = [
            path: { "${params.outdir}/final_assembly" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }   
}
